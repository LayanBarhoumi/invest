name: Bugfix Release (Part 2 of 2)

on: tag checks succeed

env:
  VERSION: $1
  GH_RUN_ID: $2
  GITHUB_REPO: "natcap/invest"
  PYPI_REPO: "testpypi"
  RELEASE_MESSAGE_FILE: release_message.rst

jobs:
  publish:
    steps:

      - name: install dependencies
        run: conda install gh twine

      - name: download artifacts
        run: |
          mkdir artifacts
          gh --repo $GITHUB_REPO run download $GH_RUN_ID \
            --dir artifacts \
            --name InVEST-Windows-binary.zip \
            --name InVEST-macOS-binary.zip \
            --name Workbench-Windows-binary.zip \
            --name Workbench-macOS-binary.zip \
            --name InVEST-sample-data.zip \
            --name InVEST-user-guide.zip \
            --name "Source distribution.zip" \
            --name "Wheel for *.zip"

      - name: create release message
        run: |
          # Format the HISTORY of this release for the release.
          # This file represents both the title and the body of the
          # release.  A blank line separates the title from the body.

          echo "$VERSION" >> "$RELEASE_MESSAGE_FILE"
          echo "" >> "$RELEASE_MESSAGE_FILE"
          echo "This bugfix release includes the following fixes and features:" >> "$RELEASE_MESSAGE_FILE"
          echo "" >> "$RELEASE_MESSAGE_FILE"  # extra line to clarify we're starting a bulleted list.

          # Copy the history notes for this version into the release message
          # The tail +3 cuts off the version string and underline of the title.
          sed -n "/$VERSION/,/^$/p" HISTORY.rst | tail -n +3 >> $RELEASE_MESSAGE_FILE

      - name: create github release
        run: |
          gh release create $VERSION \
            --repo $GITHUB_REPO \
            --notes-file $RELEASE_MESSAGE_FILE \
            --verify-tag \
            dist/*

      - name: create a PyPI release
        # this is the only step that can't be rolled back
        run: twine upload -r $PYPI_REPO dist/natcap.invest.*

      - name: roll back on failure
        if: failure()


