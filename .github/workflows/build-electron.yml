name: Build, Test Binaries, & Release

on: [push, pull_request]

defaults:
  run:
    shell: bash -l {0}

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: NPM Install
      run: npm install

    - name: Fetch InVEST Binaries
      shell: bash
      run: npm run fetch-invest

    - name: NPM Install
      run: npm install

    - name: Run the build script
      run: npm run build

    - name: Set up GCP
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
          version: '281.0.0'
          service_account_key: ${{ secrets.GOOGLE_SERVICE_ACC_KEY }}

    - name: Code-signing setup for macOS
      if: matrix.os == 'macos-latest'
      shell: bash
      env:
        P12_FILE_PATH: ~/Downloads/stanford_cert.p12
        KEYCHAIN_NAME: codesign_keychain
        KEYCHAIN_PASS: ${{ secrets.KEYCHAIN_PASS }}
        CERT_KEY_PASS: ${{ secrets.STANFORD_CERT_KEY_PASS }}

      run: |
        gsutil cp gs://stanford_cert/Stanford-natcap-code-signing-2019-03-07.p12 $P12_FILE_PATH 

        bash ./scripts/setup_macos_keychain.sh 

        # these env variables tell electron-builder to do code signing
        echo "CSC_KEYCHAIN=$KEYCHAIN_NAME" >> $GITHUB_ENV
        echo "CSC_NAME='Stanford University'" >> $GITHUB_ENV
        echo "CSC_KEY_PASSWORD=${{ secrets.CERT_KEY_PASS }}" >> $GITHUB_ENV
        echo "CSC_IDENTITY_AUTO_DISCOVERY=false" >> $GITHUB_ENV
       

    - name: Code-signing setup for Windows
      if: matrix.os == 'windows-latest'
      env:
        P12_FILE: Stanford-natcap-code-signing-2019-03-07.p12
      run: |
        gsutil cp gs://stanford_cert/$P12_FILE ~/$P12_FILE

        # all these variables are used by electron-builder
        echo "CSC_LINK=~/$P12_FILE" >> $GITHUB_ENV
        echo "CSC_KEY_PASSWORD=${{ secrets.CERT_KEY_PASS }}" >> $GITHUB_ENV
        echo "CSC_IDENTITY_AUTO_DISCOVERY=false" >> $GITHUB_ENV

    - name: Run electron-builder on macOS
      if: matrix.os == 'macos-latest'
      env:
        GH_TOKEN: env.GITHUB_TOKEN
        DEBUG: electron-builder
      run: npx --no-install electron-builder build --mac -c.extraMetadata.main=build/main.js --publish never

    - name: Run electron-builder on Windows
      if: matrix.os == 'windows-latest'
      env:
        GH_TOKEN: env.GITHUB_TOKEN
        DEBUG: electron-builder
      run: npx --no-install electron-builder build --windows -c.extraMetadata.main=build/main.js --publish never

      # Also run all tests on the build dir code?
    - name: Test flask app binaries
      run: npm run test-flask-app

    - name: Test electron app with puppeteer
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run test-electron-app
    
    - name: Upload installer artifacts
      uses: actions/upload-artifact@v2.2.1
      if: ${{ always() }}
      with:
        name: invest-workbench-${{ matrix.os }}
        path: dist/invest-workbench_*
