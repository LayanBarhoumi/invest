name: Build, Test Binaries, & Release

on: [push, pull_request]

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: NPM Install
      run: npm install

    - name: Fetch InVEST Binaries
      shell: bash
      run: npm run fetch-invest

    - name: Build & Release Electron application
      uses: samuelmeuli/action-electron-builder@v1
      if: ${{ always() }}
      with:
        build_script_name: build
        args: -c.extraMetadata.main=build/main.js
        github_token: ${{ secrets.github_token }}
        # If the commit is tagged with a version (e.g. "v1.0.0"),
        # release the app after building
        release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      # Also run all tests on the build dir code?
    - name: Test flask app binaries
      shell: bash -l {0}
      run: npm run test-flask-app

    - name: Test electron app with puppeteer
      uses: GabrielBB/xvfb-action@v1
      if: ${{ matrix.os }} != 'macos-latest'
      with:
        run: npm run test-electron-app
    
    - name: Upload installer artifacts
      uses: actions/upload-artifact@v2-preview
      if: ${{ always() }}
      with:
        name: invest-workbench-${{ matrix.os }}
        path: dist/invest-workbench_*
