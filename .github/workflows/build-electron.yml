name: Build, Test Binaries, & Release

on: [push, pull_request]

defaults:
  run:
    shell: bash -l {0}

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: NPM Install
      run: npm install

    - name: Fetch InVEST Binaries
      shell: bash
      run: npm run fetch-invest

    - name: NPM Install
      run: npm install

    - name: Run the build script
      run: npm run build
     
    - name: Run electron-builder on macOS
      if: matrix.os == 'macos-latest'
      env:
        GH_TOKEN: env.GITHUB_TOKEN
        DEBUG: electron-builder
      run: |
        # use the built version as the entrypoint
        # make sure we don't publish to github releases
        npx --no-install electron-builder build --mac -c.extraMetadata.main=build/main.js --publish never
                                   
    - name: Run electron-builder on Windows
      if: matrix.os == 'windows-latest'
      env:
        GH_TOKEN: env.GITHUB_TOKEN
        DEBUG: electron-builder
      run: npx --no-install electron-builder build --windows -c.extraMetadata.main=build/main.js --publish never

      # Also run all tests on the build dir code?
    - name: Test flask app binaries
      run: npm run test-flask-app

    - name: Test electron app with puppeteer
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run test-electron-app
    
    - name: Upload installer artifacts
      uses: actions/upload-artifact@v2.2.1
      if: ${{ always() }}
      with:
        name: invest-workbench-${{ matrix.os }}
        path: dist/invest-workbench_*
