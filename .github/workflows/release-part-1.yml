name: Release (Part 1 of 2)

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string

env:
  VERSION: ${{ inputs.version }}
  AUTORELEASE_BRANCH: autorelease/${{ inputs.version }}
  # use a personal access token here which has permissions to trigger further actions
  # this is necessary for the pr checks
  GITHUB_TOKEN: ${{ secrets.AUTORELEASE_BOT_PAT }}

permissions: write-all

jobs:
  finalize-and-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git remote -v

      # Members of the natcap software team can push to the autorelease branch on
      # natcap/invest; this branch is a special case for our release process.
      - name: Create autorelease branch
        run: git checkout -b "$AUTORELEASE_BRANCH"

      # Replace
      #
      # Unreleased Changes
      # ------------------
      #
      # with
      #
      # ..
      #   Unreleased Changes
      #   ------------------
      #
      # X.X.X (XXXX-XX-XX)
      # ------------------
      - name: Update HISTORY.rst
        run: |
          HEADER="$VERSION ($(date '+%Y-%m-%d'))"
          HEADER_LENGTH=${#HEADER}
          UNDERLINE=$(for i in $(seq 1 $HEADER_LENGTH); do echo -n "-"; done)
          perl -0777 -i -pe \
              "s/Unreleased Changes\n------------------/..\n  Unreleased Changes\n  ------------------\n\n${HEADER}\n${UNDERLINE}/g" \
              HISTORY.rst
          git add HISTORY.rst
          git commit -m "Committing the $VERSION release."

      - name: Tag and push
        run: |
          git push origin $AUTORELEASE_BRANCH
          git tag $VERSION
          git push origin $VERSION

      - name: Create a PR from the autorelease branch into main
        run: |
          gh pr create \
            --base main \
            --head $AUTORELEASE_BRANCH \
            --title "$VERSION release" \
            --reviewer $GITHUB_ACTOR \
            --assignee $GITHUB_ACTOR \
            --body "
            Release $VERSION and merge into \`main\`

            # $VERSION Release

            This PR contains automated changes made for the $VERSION release.

            Approving this PR will trigger an action that publishes the
            release. Declining this PR will trigger an action that rolls back
            any release steps that have completed so far.

            ## Review this PR
            - [ ] Make sure that the automated changes look correct
            - [ ] Wait for BOTH the PR checks AND the [$VERSION tag checks]() \
                 to complete. The $VERSION tag workflow is most important \
                 because it produces the artifacts that will be used in the \
                 next steps of the release process. If it fails for any reason, \
                 decline this PR and start over.
            - [ ] Download and try out the artifacts from the [tag build]

            **If everything looks good**, approve and merge this PR. This will
            trigger a Github Action that will publish the release. Then go
            back to the [Release Checklist](https://github.com/natcap/invest/wiki/Release-Checklist)
            and complete any remaining tasks.

            **If there is a bug**, decline this PR. Submit a fix in a separate
            PR into \`main\`. Once the fix has been merged, restart the release
            process from the beginning.

            **If the $VERSION tag workflow fails due to an intermittent problem**,
            decline this PR and start over.

            **If $VERSION tag workflow succeeds, but this PR workflow fails
            due to an intermittent problem**, continue with the release.
            Approve and merge this PR with a comment explaining what happened."

      - name: Roll back on failure
        if: failure()
        uses: ./.github/actions/rollback_release
        with:
          VERSION: ${{ env.VERSION }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
